{"ast":null,"code":"class TokenManager {\n  static getTokens() {\n    const tokens = localStorage.getItem(this.STORAGE_KEY);\n    return tokens ? parseInt(tokens, 10) : 0;\n  }\n  static setTokens(amount) {\n    const tokens = Math.min(Math.max(0, amount), this.MAX_TOKENS);\n    localStorage.setItem(this.STORAGE_KEY, tokens.toString());\n    return tokens;\n  }\n  static addTokens(amount) {\n    const current = this.getTokens();\n    return this.setTokens(current + amount);\n  }\n  static spendToken() {\n    const current = this.getTokens();\n    if (current > 0) {\n      return this.setTokens(current - 1);\n    }\n    return current;\n  }\n  static hasTokens() {\n    return this.getTokens() > 0;\n  }\n  static resetTokens() {\n    return this.setTokens(0);\n  }\n}\nTokenManager.STORAGE_KEY = 'arcade_tokens';\nTokenManager.MAX_TOKENS = 10;\nexport default TokenManager;","map":{"version":3,"names":["TokenManager","getTokens","tokens","localStorage","getItem","STORAGE_KEY","parseInt","setTokens","amount","Math","min","max","MAX_TOKENS","setItem","toString","addTokens","current","spendToken","hasTokens","resetTokens"],"sources":["C:/Users/tyler/OneDrive/Desktop/GameHub/src/utils/TokenManager.js"],"sourcesContent":["class TokenManager {\n  static STORAGE_KEY = 'arcade_tokens';\n  static MAX_TOKENS = 10;\n\n  static getTokens() {\n    const tokens = localStorage.getItem(this.STORAGE_KEY);\n    return tokens ? parseInt(tokens, 10) : 0;\n  }\n\n  static setTokens(amount) {\n    const tokens = Math.min(Math.max(0, amount), this.MAX_TOKENS);\n    localStorage.setItem(this.STORAGE_KEY, tokens.toString());\n    return tokens;\n  }\n\n  static addTokens(amount) {\n    const current = this.getTokens();\n    return this.setTokens(current + amount);\n  }\n\n  static spendToken() {\n    const current = this.getTokens();\n    if (current > 0) {\n      return this.setTokens(current - 1);\n    }\n    return current;\n  }\n\n  static hasTokens() {\n    return this.getTokens() > 0;\n  }\n\n  static resetTokens() {\n    return this.setTokens(0);\n  }\n}\n\nexport default TokenManager;\n"],"mappings":"AAAA,MAAMA,YAAY,CAAC;EAIjB,OAAOC,SAASA,CAAA,EAAG;IACjB,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,WAAW,CAAC;IACrD,OAAOH,MAAM,GAAGI,QAAQ,CAACJ,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC;EAC1C;EAEA,OAAOK,SAASA,CAACC,MAAM,EAAE;IACvB,MAAMN,MAAM,GAAGO,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEH,MAAM,CAAC,EAAE,IAAI,CAACI,UAAU,CAAC;IAC7DT,YAAY,CAACU,OAAO,CAAC,IAAI,CAACR,WAAW,EAAEH,MAAM,CAACY,QAAQ,CAAC,CAAC,CAAC;IACzD,OAAOZ,MAAM;EACf;EAEA,OAAOa,SAASA,CAACP,MAAM,EAAE;IACvB,MAAMQ,OAAO,GAAG,IAAI,CAACf,SAAS,CAAC,CAAC;IAChC,OAAO,IAAI,CAACM,SAAS,CAACS,OAAO,GAAGR,MAAM,CAAC;EACzC;EAEA,OAAOS,UAAUA,CAAA,EAAG;IAClB,MAAMD,OAAO,GAAG,IAAI,CAACf,SAAS,CAAC,CAAC;IAChC,IAAIe,OAAO,GAAG,CAAC,EAAE;MACf,OAAO,IAAI,CAACT,SAAS,CAACS,OAAO,GAAG,CAAC,CAAC;IACpC;IACA,OAAOA,OAAO;EAChB;EAEA,OAAOE,SAASA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACjB,SAAS,CAAC,CAAC,GAAG,CAAC;EAC7B;EAEA,OAAOkB,WAAWA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACZ,SAAS,CAAC,CAAC,CAAC;EAC1B;AACF;AAnCMP,YAAY,CACTK,WAAW,GAAG,eAAe;AADhCL,YAAY,CAETY,UAAU,GAAG,EAAE;AAmCxB,eAAeZ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}